name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write   # Required for OIDC
      contents: read    # Required to read the repository contents
    
    steps:
    - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5
      # SECURITY ISSUE: Not pinning action version with SHA
    
    - name: Set up Python
      uses: actions/setup-python@e9aba2c848f5ebd159c070c61ea2c4e2b122355e
      # SECURITY ISSUE: Not pinning action version with SHA
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
        pip install pytest bandit
    
    - name: Run tests
      run: |
        # SECURITY ISSUE: Not running security tests
        bandit -r ./app
        # pytest app/
    
    - name: Build Docker image
      run: |
        docker build -t user-management:${{ github.sha }} app/
        # SECURITY ISSUE: Not scanning the Docker image for vulnerabilities
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:latest image user-management:${{ github.sha }}
    
    # SECURITY ISSUE: No SAST scan
    # SECURITY ISSUE: No dependency scanning
    - name: Dependency scanning
      run: |
        pip install safety
        safety check -r app/requirements.txt
    
    # SECURITY ISSUE: No secrets scanning
    - name: Secrets scanning
      run: |
        pip install detect-secrets
        detect-secrets scan .
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        # SECURITY ISSUE: Hardcoded credentials
        role-to-assume: arn:aws:iam::003028641075:role/github-actions-build
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: user-management
      run: |
        docker tag user-management:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
        docker tag user-management:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        # SECURITY ISSUE: Pushing latest tag

  deploy:
    needs: build
    runs-on: ubuntu-latest
    # SECURITY ISSUE: No environment-specific deployment
    # SECURITY ISSUE: No approval gate for production deployment
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name my-cluster --region us-east-1
    
    - name: Deploy to Kubernetes
      run: |
        # SECURITY ISSUE: No validation of Kubernetes manifests
        kubectl apply -f infra/deployment.yaml
        # SECURITY ISSUE: No rollback strategy
        # SECURITY ISSUE: No verification of deployment health
    
    # SECURITY ISSUE: No DAST scanning post-deployment
    # SECURITY ISSUE: No compliance validation
