apiVersion: v1
kind: Namespace
metadata:
  name: secrets-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-auth
  namespace: secrets-manager
---
# SECURITY ISSUE: Missing proper RBAC configuration

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: secrets-manager
  labels:
    app.kubernetes.io/name: vault
spec:
  serviceName: vault
  replicas: 1  # SECURITY ISSUE: No high availability
  selector:
    matchLabels:
      app.kubernetes.io/name: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault
    spec:
      serviceAccountName: vault-auth
      # SECURITY ISSUE: No affinity configuration for high availability
      # SECURITY ISSUE: No proper security context
      containers:
      - name: vault
        image: hashicorp/vault:1.8.2  # SECURITY ISSUE: Not latest version with security patches
        ports:
        - containerPort: 8200
          name: api
        - containerPort: 8201
          name: cluster
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # SECURITY ISSUE: Insecure configuration with plaintext
        - name: VAULT_DEV_ROOT_TOKEN_ID  # SECURITY ISSUE: Using dev mode
          value: "root"  # SECURITY ISSUE: Predictable token
        - name: VAULT_DEV_LISTEN_ADDRESS
          value: "0.0.0.0:8200"  # SECURITY ISSUE: Listening on all interfaces
        # SECURITY ISSUE: No resource limits
        # SECURITY ISSUE: No readiness/liveness probes
        # SECURITY ISSUE: Using dev mode instead of proper initialization
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: secrets-manager
  labels:
    app.kubernetes.io/name: vault
spec:
  ports:
  - port: 8200
    targetPort: 8200
    protocol: TCP
    name: api
  - port: 8201
    targetPort: 8201
    protocol: TCP
    name: cluster
  selector:
    app.kubernetes.io/name: vault
---
# SECURITY ISSUE: No NetworkPolicy to restrict access

# Vault Client Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-client-config
  namespace: secrets-manager
data:
  # SECURITY ISSUE: Basic configuration only
  vault-agent-config.hcl: |
    pid_file = "/home/vault/pidfile"
    
    vault {
      address = "http://vault:8200"  # SECURITY ISSUE: No TLS/SSL
    }
    
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "app"
        }
      }
    }
    
    template {
      destination = "/etc/secrets/db-creds"
      contents = <<EOF
      {{- with secret "database/creds/app" -}}
      DB_USERNAME="{{ .Data.username }}"
      DB_PASSWORD="{{ .Data.password }}"
      {{- end -}}
      EOF
    }
---
# Sample SecretProviderClass for CSI driver
apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: vault-db-creds
  namespace: default
spec:
  provider: vault
  parameters:
    vaultAddress: "http://vault.secrets-manager:8200"  # SECURITY ISSUE: No TLS
    roleName: "app"
    objects: |
      - objectName: "db-username"
        secretPath: "database/creds/app"
        secretKey: "username"
      - objectName: "db-password"
        secretPath: "database/creds/app"
        secretKey: "password"
---
# Sample Deployment showing integration with Vault
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      # SECURITY ISSUE: No security context
      containers:
      - name: app
        image: app:latest  # SECURITY ISSUE: Using latest tag
        volumeMounts:
        - name: vault-db-creds
          mountPath: "/etc/secrets"
          readOnly: true
        # SECURITY ISSUE: No resource limits
      volumes:
      - name: vault-db-creds
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: vault-db-creds
